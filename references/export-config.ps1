<#
.SYNOPSIS
   Gather the information needed for WSCR to work.
.DESCRIPTION
   Execute different processing in order to extract and gather all the information required to perform a secure configuration review.
.EXAMPLE
   .\export-config.ps1
.INPUTS
   No input needed.
.OUTPUTS
   Generate a JSON file with this name "[HOSTNAME_UPPERCASE]-IIS.json".
.NOTES
   In order to increase the maintainability of the script, each extract is associated to a validation point of the CIS referential and 
   each validation point of the CIS referential is associated to a internal function dedicated to extract the data needed for this point.
   Each internal function dedicated generate a proper object.
   The main code block gather all the objects, generated by each internal functions, in a global object where each sub objects is
   identified by a key that is the CIS validation point identifier. To finish it convert this object ta JSON string that is saved 
	to a file.
#>

##############################
## INTERNAL FUNCTIONS BLOCK ##
##############################
# CIS document source: CIS_Microsoft_IIS_10_Benchmark_v1.1.1.pdf
# Every time it was possible PowerShell command was used otherwise the shell command was used
# for portability between IIS8 and IIS10
# Script was developed on WIN12 with IIS8

# Internal function for the validation point 1.1
# CIS title "Ensure web content is on non-system partition"
function Export-DataPoint11{
   # See https://www.jonathanmedd.net/2014/01/adding-and-removing-items-from-a-powershell-array.html
	[System.Collections.ArrayList]$results = @()
	Get-Website | ForEach-Object -Process { $results.Add(@{Name=$_.name; PhysicalPath=$_.physicalPath})} | Out-Null
	return $results 
}

# Internal function for the validation point 1.2
# CIS title "Ensure 'host headers' are on all sites"
function Export-DataPoint12{
	[System.Collections.ArrayList]$results = @()
   Get-WebBinding -Port * | ForEach-Object -Process { $results.Add(@{Protocol=$_.protocol; BindingInformation=$_.bindingInformation; SSLFlags=$_.sslFlags})} | Out-Null
   return $results 
}

# Internal function for the validation point 1.3
# CIS title "Ensure 'directory browsing' is set to disabled"
function Export-DataPoint13{
   # Use the shell command here for portability between IIS8 and IIS10 (script was developed on WIN12 with IIS8)
   $results=c:\windows\system32\inetsrv\appcmd list config /section:directoryBrowse 
   return $results
}

# Internal function for the validation point 1.4
# CIS title "Ensure 'application pool identity' is configured for all application pools"
function Export-DataPoint14{
   $results = Get-ChildItem -Path IIS:\AppPools\ | Select-Object name, state, <#@{e={$_.processModel.password};l="password"}, #> @{e={$_.processModel.identityType};l="identityType"}
   return $results
}

# Internal function for the validation point 1.5
# CIS title "Ensure 'unique application pools' is set for sites"
function Export-DataPoint15{
   $results = null #TODO
   return $results
}

#############################
## MAIN FUNCTIONS BLOCK   ##
#############################
Export-DataPoint14 | ConvertTo-Json